# Generated by Django 3.2.7 on 2021-10-04 10:23

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models

import accounts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("payments", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password",
                 models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True,
                                         null=True,
                                         verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique":
                            "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.
                            UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True,
                                     max_length=150,
                                     verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True,
                                     max_length=150,
                                     verbose_name="last name"),
                ),
                (
                    "email",
                    models.EmailField(blank=True,
                                      max_length=254,
                                      verbose_name="email address"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now,
                                         verbose_name="date joined"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"),
                                 ("O", "Others")],
                        max_length=11,
                        null=True,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.MinLengthValidator(13),
                            accounts.models.validate_phone,
                        ],
                        verbose_name="phone",
                    ),
                ),
                (
                    "address1",
                    models.TextField(
                        validators=[accounts.models.validate_address],
                        verbose_name="address 1",
                    ),
                ),
                (
                    "address2",
                    models.TextField(
                        validators=[accounts.models.validate_address],
                        verbose_name="address 2",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        max_length=500,
                        validators=[accounts.models.validate_city],
                        verbose_name="city",
                    ),
                ),
                ("state", models.CharField(max_length=250,
                                           verbose_name="state")),
                (
                    "country",
                    models.CharField(max_length=250,
                                     null=True,
                                     verbose_name="country"),
                ),
                ("unique_id", models.UUIDField(default=uuid.uuid4)),
                (
                    "zip_code",
                    models.CharField(
                        max_length=6,
                        validators=[accounts.models.validate_zip],
                        verbose_name="zip code",
                    ),
                ),
                (
                    "university_name",
                    models.CharField(
                        max_length=250,
                        verbose_name="University or College Name"),
                ),
                (
                    "registration_no",
                    models.CharField(
                        help_text="Your college issued ID (Optional)",
                        max_length=250,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(3)
                        ],
                        verbose_name="Registration No",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "orders",
                    models.ManyToManyField(
                        blank=True,
                        help_text="This is to be filled by computer",
                        to="payments.Payments",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "unique_together": {("email", "registration_no")},
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
